r ./test.c 
p/x parent 
p/x *parent 
bt
b 1044
r ./test.c 
b declareFunction 
r ./test.c 
lay src
s
fin
n
r ./test.c 
n
s
r ./test.c 
i b
del 1 2
c
p/x parent
p/x *parent
bt
r ./test.c 
p/x *parent
r ./test.c 
b processProgramNode 
r ./test.c 
lay src
fin
i b
del 3
b processDeclarationNode 
r ./test.c 
fs cmd
FIN
fin
r ./test.c 
s
n
n
s
fin
p/x flag
s
p/x flag
b processDeclarationList 
r ./test.c 
i b
del 5
c
c
p/x *declarationNode 
p/x *declarationNode 
fin
r ./test.c 
c
s
fin
fin
n
p/x retval
n
n
p/x retval
b declaredLocally 
r ./test.c 
c
c
c
n
p/x *entry
p/x entry

r ./test.c 
i b
del 4 6
r ./test.c 
p/x idType
p/x id
p/x id->child
br
del 7
bt
p/x id
p/x *id
p/x relopExpr 
r ./test.c 
lay src
p/x *relopExpr 
i b
r ./test.c 
b declareInitId 
r ./test.c 
b processProgramNode 
r ./test.c 
lay src
s
s
s
fin
s
p/x flag
r ./test.c 
s
p/x decl
p/x *decl
n
p/x flag
r ./test.c 
s
s
n
s
s
n
s
p/x king
p/x kind
s
fin
s
n
s
fin
n
i b
del 8 9
del 8 9
r ./test.c 
p/x str
br
del 10
bt
b processTypeNode 
r ./test.c 
s
p/x *typeNode 
b r
bt
b declareIdList 
r ./test.c 
lay src
s
r ./test.c 
b t
bt
c
bt
c
bt
i b
del 11 12
b declaredLocally 
r ./test.c 
r ./test.c 
x/s symbolNam
x/s symbolName
c
x/s symbolName
c
x/s symbolName
lay src
s
fin
s
p/x entry
p/x entry->nestingLevel 
p/x symbolTable.currentLevel 
p openScope()
p/x symbolTable.currentLevel 
p/x *symbolTable
p/x symbolTable
r ./test.c 
fin
lay src
p/x signature
p/x *signature
fs src
fs cmd
p/x *iterator
p/x iterator
lay src
bt
b processDeclarationNode 
r ./test.c 
p/x declarationNode 
p/x *declarationNode 
peda
p/x *declarationNode 
p/x *declarationNode 
