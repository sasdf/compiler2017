Nonterminals useless in grammar

   test


Terminals unused in grammar

   IF
   ELSE
   WHILE
   MK_DOT
   ERROR


Rules useless in grammar

  105 test: assign_expr


Rules useless in parser due to conflicts

   49 init_id: ID


State 15 conflicts: 2 reduce/reduce
State 24 conflicts: 2 reduce/reduce
State 39 conflicts: 2 reduce/reduce
State 60 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | %empty

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | %empty

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON
   30         | ID id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: dim_decl MK_LB cexpr MK_RB
   38         | %empty

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | MK_LPAREN cexpr MK_RPAREN

   47 init_id_list: init_id
   48             | init_id_list MK_COMMA init_id

   49 init_id: ID
   50        | ID dim_decl
   51        | ID OP_ASSIGN relop_expr

   52 stmt_list: stmt_list stmt
   53          | stmt

   54 stmt: MK_LBRACE block MK_RBRACE
   55     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   56     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   57     | MK_SEMICOLON
   58     | RETURN MK_SEMICOLON
   59     | RETURN relop_expr MK_SEMICOLON

   60 assign_expr_list: nonempty_assign_expr_list
   61                 | %empty

   62 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   63                          | assign_expr

   64 assign_expr: ID OP_ASSIGN relop_expr
   65            | relop_expr

   66 relop_expr: relop_term
   67           | relop_expr OP_OR relop_term

   68 relop_term: relop_factor
   69           | relop_term OP_AND relop_factor

   70 relop_factor: expr
   71             | expr rel_op expr

   72 rel_op: OP_EQ
   73       | OP_GE
   74       | OP_LE
   75       | OP_NE
   76       | OP_GT
   77       | OP_LT

   78 relop_expr_list: nonempty_relop_expr_list
   79                | %empty

   80 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   81                         | relop_expr

   82 expr: expr add_op term
   83     | term

   84 add_op: OP_PLUS
   85       | OP_MINUS

   86 term: term mul_op factor
   87     | factor

   88 mul_op: OP_TIMES
   89       | OP_DIVIDE

   90 factor: MK_LPAREN relop_expr MK_RPAREN
   91       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   92       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   93       | CONST
   94       | OP_MINUS CONST
   95       | OP_NOT CONST
   96       | ID MK_LPAREN relop_expr_list MK_RPAREN
   97       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
   98       | var_ref
   99       | OP_MINUS var_ref
  100       | OP_NOT var_ref

  101 var_ref: ID
  102        | ID dim_list

  103 dim_list: dim_list MK_LB expr MK_RB
  104         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 30 33 34 35 36 49 50 51 64 96 97 101 102
CONST (259) 45 93 94 95
VOID (260) 8 10 28
INT (261) 31
FLOAT (262) 32
IF (263)
ELSE (264)
WHILE (265)
FOR (266) 55
TYPEDEF (267) 27 28
OP_ASSIGN (268) 51 56 64
OP_OR (269) 67
OP_AND (270) 69
OP_NOT (271) 92 95 97 100
OP_EQ (272) 72
OP_NE (273) 75
OP_GT (274) 76
OP_LT (275) 77
OP_GE (276) 73
OP_LE (277) 74
OP_PLUS (278) 39 84
OP_MINUS (279) 40 85 91 94 99
OP_TIMES (280) 42 88
OP_DIVIDE (281) 43 89
MK_LB (282) 15 16 37 103 104
MK_RB (283) 15 16 37 103 104
MK_LPAREN (284) 7 8 9 10 46 55 90 91 92 96 97
MK_RPAREN (285) 7 8 9 10 46 55 90 91 92 96 97
MK_LBRACE (286) 7 8 9 10 54
MK_RBRACE (287) 7 8 9 10 54
MK_COMMA (288) 11 34 35 48 62 80
MK_SEMICOLON (289) 27 28 29 30 55 56 57 58 59
MK_DOT (290)
ERROR (291)
RETURN (292) 58 59


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 54
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29 30, on right: 26
type (52)
    on left: 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 30 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 37 50
cexpr (55)
    on left: 39 40 41, on right: 37 39 40 46
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46, on right: 42 43 44
init_id_list (58)
    on left: 47 48, on right: 29 48
init_id (59)
    on left: 49 50 51, on right: 47 48
stmt_list (60)
    on left: 52 53, on right: 19 20 52
stmt (61)
    on left: 54 55 56 57 58 59, on right: 52 53 55
assign_expr_list (62)
    on left: 60 61, on right: 55
nonempty_assign_expr_list (63)
    on left: 62 63, on right: 60 62
assign_expr (64)
    on left: 64 65, on right: 62 63
relop_expr (65)
    on left: 66 67, on right: 51 56 59 64 65 67 80 81 90 91 92
relop_term (66)
    on left: 68 69, on right: 66 67 69
relop_factor (67)
    on left: 70 71, on right: 68 69
rel_op (68)
    on left: 72 73 74 75 76 77, on right: 71
relop_expr_list (69)
    on left: 78 79, on right: 55 96 97
nonempty_relop_expr_list (70)
    on left: 80 81, on right: 78 80
expr (71)
    on left: 82 83, on right: 16 17 70 71 82 103 104
add_op (72)
    on left: 84 85, on right: 82
term (73)
    on left: 86 87, on right: 82 83 86
mul_op (74)
    on left: 88 89, on right: 86
factor (75)
    on left: 90 91 92 93 94 95 96 97 98 99 100, on right: 86 87
var_ref (76)
    on left: 101 102, on right: 56 98 99 100
dim_list (77)
    on left: 103 104, on right: 102 103


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   30 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 16


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


State 3

   31 type: INT .

    $default  reduce using rule 31 (type)


State 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


State 6

    0 $accept: program . $end

    $end  shift, and go to state 20


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


State 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


State 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


State 15

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB         reduce using rule 38 (dim_decl)
    MK_COMMA      reduce using rule 33 (id_list)
    MK_COMMA      [reduce using rule 38 (dim_decl)]
    MK_SEMICOLON  reduce using rule 33 (id_list)
    MK_SEMICOLON  [reduce using rule 38 (dim_decl)]
    $default      reduce using rule 33 (id_list)

    dim_decl  go to state 27


State 16

   30 var_decl: ID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 28
    MK_SEMICOLON  shift, and go to state 29


State 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 30


State 18

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 31


State 19

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 32


State 20

    0 $accept: program $end .

    $default  accept


State 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 23

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


State 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 33
    MK_LPAREN  shift, and go to state 34

    MK_COMMA      reduce using rule 38 (dim_decl)
    MK_COMMA      [reduce using rule 49 (init_id)]
    MK_SEMICOLON  reduce using rule 38 (dim_decl)
    MK_SEMICOLON  [reduce using rule 49 (init_id)]
    $default      reduce using rule 38 (dim_decl)

    dim_decl  go to state 35


State 25

   29 var_decl: type init_id_list . MK_SEMICOLON
   48 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 36
    MK_SEMICOLON  shift, and go to state 37


State 26

   47 init_id_list: init_id .

    $default  reduce using rule 47 (init_id_list)


State 27

   36 id_list: ID dim_decl .
   37 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 38

    $default  reduce using rule 36 (id_list)


State 28

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 39


State 29

   30 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


State 30

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 40

    param_list  go to state 41
    param       go to state 42
    type        go to state 43


State 31

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 28
    MK_SEMICOLON  shift, and go to state 44


State 32

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 28
    MK_SEMICOLON  shift, and go to state 45


State 33

   51 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 51
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 34

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 58

    param_list  go to state 59
    param       go to state 42
    type        go to state 43


State 35

   37 dim_decl: dim_decl . MK_LB cexpr MK_RB
   50 init_id: ID dim_decl .

    MK_LB  shift, and go to state 38

    $default  reduce using rule 50 (init_id)


State 36

   48 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 60

    init_id  go to state 61


State 37

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 38

   37 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 62
    MK_LPAREN  shift, and go to state 63

    cexpr    go to state 64
    mcexpr   go to state 65
    cfactor  go to state 66


State 39

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB         reduce using rule 38 (dim_decl)
    MK_COMMA      reduce using rule 34 (id_list)
    MK_COMMA      [reduce using rule 38 (dim_decl)]
    MK_SEMICOLON  reduce using rule 34 (id_list)
    MK_SEMICOLON  [reduce using rule 38 (dim_decl)]
    $default      reduce using rule 34 (id_list)

    dim_decl  go to state 67


State 40

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 68


State 41

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 69
    MK_COMMA   shift, and go to state 70


State 42

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 43

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 71


State 44

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 45

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


State 46

   96 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  101 var_ref: ID .
  102        | ID . dim_list

    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 101 (var_ref)

    dim_list  go to state 74


State 47

   93 factor: CONST .

    $default  reduce using rule 93 (factor)


State 48

   92 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
   95       | OP_NOT . CONST
   97       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  100       | OP_NOT . var_ref

    ID         shift, and go to state 75
    CONST      shift, and go to state 76
    MK_LPAREN  shift, and go to state 77

    var_ref  go to state 78


State 49

   91 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
   94       | OP_MINUS . CONST
   99       | OP_MINUS . var_ref

    ID         shift, and go to state 79
    CONST      shift, and go to state 80
    MK_LPAREN  shift, and go to state 81

    var_ref  go to state 82


State 50

   90 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 83
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 51

   51 init_id: ID OP_ASSIGN relop_expr .
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 84

    $default  reduce using rule 51 (init_id)


State 52

   66 relop_expr: relop_term .
   69 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 85

    $default  reduce using rule 66 (relop_expr)


State 53

   68 relop_term: relop_factor .

    $default  reduce using rule 68 (relop_term)


State 54

   70 relop_factor: expr .
   71             | expr . rel_op expr
   82 expr: expr . add_op term

    OP_EQ     shift, and go to state 86
    OP_NE     shift, and go to state 87
    OP_GT     shift, and go to state 88
    OP_LT     shift, and go to state 89
    OP_GE     shift, and go to state 90
    OP_LE     shift, and go to state 91
    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93

    $default  reduce using rule 70 (relop_factor)

    rel_op  go to state 94
    add_op  go to state 95


State 55

   83 expr: term .
   86 term: term . mul_op factor

    OP_TIMES   shift, and go to state 96
    OP_DIVIDE  shift, and go to state 97

    $default  reduce using rule 83 (expr)

    mul_op  go to state 98


State 56

   87 term: factor .

    $default  reduce using rule 87 (term)


State 57

   98 factor: var_ref .

    $default  reduce using rule 98 (factor)


State 58

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 99


State 59

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 100
    MK_COMMA   shift, and go to state 70


State 60

   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 33

    MK_COMMA      reduce using rule 38 (dim_decl)
    MK_COMMA      [reduce using rule 49 (init_id)]
    MK_SEMICOLON  reduce using rule 38 (dim_decl)
    MK_SEMICOLON  [reduce using rule 49 (init_id)]
    $default      reduce using rule 38 (dim_decl)

    dim_decl  go to state 35


State 61

   48 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 48 (init_id_list)


State 62

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


State 63

   46 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 62
    MK_LPAREN  shift, and go to state 63

    cexpr    go to state 101
    mcexpr   go to state 65
    cfactor  go to state 66


State 64

   37 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 102
    OP_MINUS  shift, and go to state 103
    MK_RB     shift, and go to state 104


State 65

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 105
    OP_DIVIDE  shift, and go to state 106

    $default  reduce using rule 41 (cexpr)


State 66

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


State 67

   35 id_list: id_list MK_COMMA ID dim_decl .
   37 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 38

    $default  reduce using rule 35 (id_list)


State 68

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 107
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 108
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 22 (block)

    block      go to state 112
    decl_list  go to state 113
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 114
    stmt_list  go to state 115
    stmt       go to state 116
    var_ref    go to state 117


State 69

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 118


State 70

   11 param_list: param_list MK_COMMA . param

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 119
    type   go to state 43


State 71

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 120

    $default  reduce using rule 13 (param)

    dim_fn  go to state 121


State 72

  104 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 122
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 73

   96 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 79 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 124
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 74

  102 var_ref: ID dim_list .
  103 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 126

    $default  reduce using rule 102 (var_ref)


State 75

   97 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  101 var_ref: ID .
  102        | ID . dim_list

    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 127

    $default  reduce using rule 101 (var_ref)

    dim_list  go to state 74


State 76

   95 factor: OP_NOT CONST .

    $default  reduce using rule 95 (factor)


State 77

   92 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 128
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 78

  100 factor: OP_NOT var_ref .

    $default  reduce using rule 100 (factor)


State 79

  101 var_ref: ID .
  102        | ID . dim_list

    MK_LB  shift, and go to state 72

    $default  reduce using rule 101 (var_ref)

    dim_list  go to state 74


State 80

   94 factor: OP_MINUS CONST .

    $default  reduce using rule 94 (factor)


State 81

   91 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 129
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 82

   99 factor: OP_MINUS var_ref .

    $default  reduce using rule 99 (factor)


State 83

   67 relop_expr: relop_expr . OP_OR relop_term
   90 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 84
    MK_RPAREN  shift, and go to state 130


State 84

   67 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_term    go to state 131
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 85

   69 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_factor  go to state 132
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 86

   72 rel_op: OP_EQ .

    $default  reduce using rule 72 (rel_op)


State 87

   75 rel_op: OP_NE .

    $default  reduce using rule 75 (rel_op)


State 88

   76 rel_op: OP_GT .

    $default  reduce using rule 76 (rel_op)


State 89

   77 rel_op: OP_LT .

    $default  reduce using rule 77 (rel_op)


State 90

   73 rel_op: OP_GE .

    $default  reduce using rule 73 (rel_op)


State 91

   74 rel_op: OP_LE .

    $default  reduce using rule 74 (rel_op)


State 92

   84 add_op: OP_PLUS .

    $default  reduce using rule 84 (add_op)


State 93

   85 add_op: OP_MINUS .

    $default  reduce using rule 85 (add_op)


State 94

   71 relop_factor: expr rel_op . expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 133
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 95

   82 expr: expr add_op . term

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    term     go to state 134
    factor   go to state 56
    var_ref  go to state 57


State 96

   88 mul_op: OP_TIMES .

    $default  reduce using rule 88 (mul_op)


State 97

   89 mul_op: OP_DIVIDE .

    $default  reduce using rule 89 (mul_op)


State 98

   86 term: term mul_op . factor

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    factor   go to state 135
    var_ref  go to state 57


State 99

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 107
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 108
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 22 (block)

    block      go to state 136
    decl_list  go to state 113
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 114
    stmt_list  go to state 115
    stmt       go to state 116
    var_ref    go to state 117


State 100

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 137


State 101

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   46 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 102
    OP_MINUS   shift, and go to state 103
    MK_RPAREN  shift, and go to state 138


State 102

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 62
    MK_LPAREN  shift, and go to state 63

    mcexpr   go to state 139
    cfactor  go to state 66


State 103

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 62
    MK_LPAREN  shift, and go to state 63

    mcexpr   go to state 140
    cfactor  go to state 66


State 104

   37 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


State 105

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 62
    MK_LPAREN  shift, and go to state 63

    cfactor  go to state 141


State 106

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 62
    MK_LPAREN  shift, and go to state 63

    cfactor  go to state 142


State 107

   30 var_decl: ID . id_list MK_SEMICOLON
  101 var_ref: ID .
  102        | ID . dim_list

    ID     shift, and go to state 15
    MK_LB  shift, and go to state 72

    $default  reduce using rule 101 (var_ref)

    id_list   go to state 16
    dim_list  go to state 74


State 108

   55 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 143


State 109

   54 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 107
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 108
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 22 (block)

    block      go to state 144
    decl_list  go to state 113
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 114
    stmt_list  go to state 115
    stmt       go to state 116
    var_ref    go to state 117


State 110

   57 stmt: MK_SEMICOLON .

    $default  reduce using rule 57 (stmt)


State 111

   58 stmt: RETURN . MK_SEMICOLON
   59     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 46
    CONST         shift, and go to state 47
    OP_NOT        shift, and go to state 48
    OP_MINUS      shift, and go to state 49
    MK_LPAREN     shift, and go to state 50
    MK_SEMICOLON  shift, and go to state 145

    relop_expr    go to state 146
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 112

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 147


State 113

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 107
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 108
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 21 (block)

    decl       go to state 23
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 114
    stmt_list  go to state 148
    stmt       go to state 116
    var_ref    go to state 117


State 114

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 60

    init_id_list  go to state 25
    init_id       go to state 26


State 115

   20 block: stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 79
    FOR           shift, and go to state 108
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 20 (block)

    stmt     go to state 149
    var_ref  go to state 117


State 116

   53 stmt_list: stmt .

    $default  reduce using rule 53 (stmt_list)


State 117

   56 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 150


State 118

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 107
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 108
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 22 (block)

    block      go to state 151
    decl_list  go to state 113
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 114
    stmt_list  go to state 115
    stmt       go to state 116
    var_ref    go to state 117


State 119

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


State 120

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 152
    expr       go to state 153
    term       go to state 55
    factor     go to state 56
    var_ref    go to state 57


State 121

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 154

    $default  reduce using rule 14 (param)


State 122

   82 expr: expr . add_op term
  104 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93
    MK_RB     shift, and go to state 155

    add_op  go to state 95


State 123

   67 relop_expr: relop_expr . OP_OR relop_term
   81 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 84

    $default  reduce using rule 81 (nonempty_relop_expr_list)


State 124

   96 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 156


State 125

   78 relop_expr_list: nonempty_relop_expr_list .
   80 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 157

    $default  reduce using rule 78 (relop_expr_list)


State 126

  103 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 158
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 127

   97 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 79 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 159
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 128

   67 relop_expr: relop_expr . OP_OR relop_term
   92 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 84
    MK_RPAREN  shift, and go to state 160


State 129

   67 relop_expr: relop_expr . OP_OR relop_term
   91 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 84
    MK_RPAREN  shift, and go to state 161


State 130

   90 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 90 (factor)


State 131

   67 relop_expr: relop_expr OP_OR relop_term .
   69 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 85

    $default  reduce using rule 67 (relop_expr)


State 132

   69 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 69 (relop_term)


State 133

   71 relop_factor: expr rel_op expr .
   82 expr: expr . add_op term

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93

    $default  reduce using rule 71 (relop_factor)

    add_op  go to state 95


State 134

   82 expr: expr add_op term .
   86 term: term . mul_op factor

    OP_TIMES   shift, and go to state 96
    OP_DIVIDE  shift, and go to state 97

    $default  reduce using rule 82 (expr)

    mul_op  go to state 98


State 135

   86 term: term mul_op factor .

    $default  reduce using rule 86 (term)


State 136

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 162


State 137

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 107
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 108
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 22 (block)

    block      go to state 163
    decl_list  go to state 113
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 114
    stmt_list  go to state 115
    stmt       go to state 116
    var_ref    go to state 117


State 138

   46 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 46 (cfactor)


State 139

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 105
    OP_DIVIDE  shift, and go to state 106

    $default  reduce using rule 39 (cexpr)


State 140

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 105
    OP_DIVIDE  shift, and go to state 106

    $default  reduce using rule 40 (cexpr)


State 141

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


State 142

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


State 143

   55 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 164
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 61 (assign_expr_list)

    assign_expr_list           go to state 165
    nonempty_assign_expr_list  go to state 166
    assign_expr                go to state 167
    relop_expr                 go to state 168
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    var_ref                    go to state 57


State 144

   54 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 169


State 145

   58 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 58 (stmt)


State 146

   59 stmt: RETURN relop_expr . MK_SEMICOLON
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 84
    MK_SEMICOLON  shift, and go to state 170


State 147

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 148

   19 block: decl_list stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 79
    FOR           shift, and go to state 108
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    $default  reduce using rule 19 (block)

    stmt     go to state 149
    var_ref  go to state 117


State 149

   52 stmt_list: stmt_list stmt .

    $default  reduce using rule 52 (stmt_list)


State 150

   56 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 171
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 151

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 172


State 152

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 173


State 153

   17 expr_null: expr .
   82 expr: expr . add_op term

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 95


State 154

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    expr     go to state 174
    term     go to state 55
    factor   go to state 56
    var_ref  go to state 57


State 155

  104 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 104 (dim_list)


State 156

   96 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 96 (factor)


State 157

   80 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 175
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 158

   82 expr: expr . add_op term
  103 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93
    MK_RB     shift, and go to state 176

    add_op  go to state 95


State 159

   97 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 177


State 160

   92 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 92 (factor)


State 161

   91 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 91 (factor)


State 162

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 163

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 178


State 164

   64 assign_expr: ID . OP_ASSIGN relop_expr
   96 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  101 var_ref: ID .
  102        | ID . dim_list

    OP_ASSIGN  shift, and go to state 179
    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 101 (var_ref)

    dim_list  go to state 74


State 165

   55 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 180


State 166

   60 assign_expr_list: nonempty_assign_expr_list .
   62 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 181

    $default  reduce using rule 60 (assign_expr_list)


State 167

   63 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 63 (nonempty_assign_expr_list)


State 168

   65 assign_expr: relop_expr .
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 84

    $default  reduce using rule 65 (assign_expr)


State 169

   54 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 54 (stmt)


State 170

   59 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 59 (stmt)


State 171

   56 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 84
    MK_SEMICOLON  shift, and go to state 182


State 172

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 173

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


State 174

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   82 expr: expr . add_op term

    OP_PLUS   shift, and go to state 92
    OP_MINUS  shift, and go to state 93
    MK_RB     shift, and go to state 183

    add_op  go to state 95


State 175

   67 relop_expr: relop_expr . OP_OR relop_term
   80 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 84

    $default  reduce using rule 80 (nonempty_relop_expr_list)


State 176

  103 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 103 (dim_list)


State 177

   97 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 97 (factor)


State 178

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 179

   64 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    relop_expr    go to state 184
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 180

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 46
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 79 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 52
    relop_factor              go to state 53
    relop_expr_list           go to state 185
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 54
    term                      go to state 55
    factor                    go to state 56
    var_ref                   go to state 57


State 181

   62 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 164
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    assign_expr   go to state 186
    relop_expr    go to state 168
    relop_term    go to state 52
    relop_factor  go to state 53
    expr          go to state 54
    term          go to state 55
    factor        go to state 56
    var_ref       go to state 57


State 182

   56 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 56 (stmt)


State 183

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 184

   64 assign_expr: ID OP_ASSIGN relop_expr .
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 84

    $default  reduce using rule 64 (assign_expr)


State 185

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 187


State 186

   62 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 62 (nonempty_assign_expr_list)


State 187

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 164
    CONST      shift, and go to state 47
    OP_NOT     shift, and go to state 48
    OP_MINUS   shift, and go to state 49
    MK_LPAREN  shift, and go to state 50

    $default  reduce using rule 61 (assign_expr_list)

    assign_expr_list           go to state 188
    nonempty_assign_expr_list  go to state 166
    assign_expr                go to state 167
    relop_expr                 go to state 168
    relop_term                 go to state 52
    relop_factor               go to state 53
    expr                       go to state 54
    term                       go to state 55
    factor                     go to state 56
    var_ref                    go to state 57


State 188

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 189


State 189

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 79
    FOR           shift, and go to state 108
    MK_LBRACE     shift, and go to state 109
    MK_SEMICOLON  shift, and go to state 110
    RETURN        shift, and go to state 111

    stmt     go to state 190
    var_ref  go to state 117


State 190

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 55 (stmt)
