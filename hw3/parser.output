Terminals unused in grammar

   MK_DOT
   ERROR


State 199 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 216 conflicts: 9 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | %empty

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | %empty

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON
   30         | ID id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: dim_decl MK_LB cexpr MK_RB
   38         | MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | MK_LPAREN cexpr MK_RPAREN

   47 init_id_list: init_id
   48             | init_id_list MK_COMMA init_id

   49 init_id: ID
   50        | ID dim_decl
   51        | ID OP_ASSIGN relop_expr

   52 stmt_list: stmt_list stmt
   53          | stmt

   54 elseif: ELSE stmt
   55       | ELSE IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   56       | %empty

   57 stmt: MK_LBRACE block MK_RBRACE
   58     | WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | MK_SEMICOLON
   64     | RETURN MK_SEMICOLON
   65     | RETURN relop_expr MK_SEMICOLON

   66 assign_expr_list: nonempty_assign_expr_list
   67                 | %empty

   68 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   69                          | assign_expr

   70 assign_expr: ID OP_ASSIGN relop_expr
   71            | relop_expr

   72 relop_expr: relop_term
   73           | relop_expr OP_OR relop_term

   74 relop_term: relop_factor
   75           | relop_term OP_AND relop_factor

   76 relop_factor: expr
   77             | expr rel_op expr

   78 rel_op: OP_EQ
   79       | OP_GE
   80       | OP_LE
   81       | OP_NE
   82       | OP_GT
   83       | OP_LT

   84 relop_expr_list: nonempty_relop_expr_list
   85                | %empty

   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | relop_expr

   88 expr: expr add_op term
   89     | term

   90 add_op: OP_PLUS
   91       | OP_MINUS

   92 term: term mul_op factor
   93     | factor

   94 mul_op: OP_TIMES
   95       | OP_DIVIDE

   96 factor: MK_LPAREN relop_expr MK_RPAREN
   97       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | CONST
  100       | OP_MINUS CONST
  101       | OP_NOT CONST
  102       | ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | var_ref
  105       | OP_MINUS var_ref
  106       | OP_NOT var_ref

  107 var_ref: ID
  108        | ID dim_list

  109 dim_list: dim_list MK_LB expr MK_RB
  110         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 30 33 34 35 36 49 50 51 62 70 102 103 107 108
CONST (259) 45 99 100 101
VOID (260) 8 10 28
INT (261) 31
FLOAT (262) 32
IF (263) 55 61
ELSE (264) 54 55
WHILE (265) 58
FOR (266) 59
TYPEDEF (267) 27 28
OP_ASSIGN (268) 51 60 70
OP_OR (269) 73
OP_AND (270) 75
OP_NOT (271) 98 101 103 106
OP_EQ (272) 78
OP_NE (273) 81
OP_GT (274) 82
OP_LT (275) 83
OP_GE (276) 79
OP_LE (277) 80
OP_PLUS (278) 39 90
OP_MINUS (279) 40 91 97 100 105
OP_TIMES (280) 42 94
OP_DIVIDE (281) 43 95
MK_LB (282) 15 16 37 38 109 110
MK_RB (283) 15 16 37 38 109 110
MK_LPAREN (284) 7 8 9 10 46 55 58 59 61 62 96 97 98 102 103
MK_RPAREN (285) 7 8 9 10 46 55 58 59 61 62 96 97 98 102 103
MK_LBRACE (286) 7 8 9 10 57
MK_RBRACE (287) 7 8 9 10 57
MK_COMMA (288) 11 34 35 48 68 86
MK_SEMICOLON (289) 27 28 29 30 59 60 63 64 65
MK_DOT (290)
ERROR (291)
RETURN (292) 64 65


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 57
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29 30, on right: 26
type (52)
    on left: 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 30 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 37 50
cexpr (55)
    on left: 39 40 41, on right: 37 38 39 40 46
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46, on right: 42 43 44
init_id_list (58)
    on left: 47 48, on right: 29 48
init_id (59)
    on left: 49 50 51, on right: 47 48
stmt_list (60)
    on left: 52 53, on right: 19 20 52
elseif (61)
    on left: 54 55 56, on right: 55 61
stmt (62)
    on left: 57 58 59 60 61 62 63 64 65, on right: 52 53 54 55 58 59
    61
assign_expr_list (63)
    on left: 66 67, on right: 59
nonempty_assign_expr_list (64)
    on left: 68 69, on right: 66 68
assign_expr (65)
    on left: 70 71, on right: 68 69
relop_expr (66)
    on left: 72 73, on right: 51 60 65 70 71 73 86 87 96 97 98
relop_term (67)
    on left: 74 75, on right: 72 73 75
relop_factor (68)
    on left: 76 77, on right: 74 75
rel_op (69)
    on left: 78 79 80 81 82 83, on right: 77
relop_expr_list (70)
    on left: 84 85, on right: 55 58 59 61 62 102 103
nonempty_relop_expr_list (71)
    on left: 86 87, on right: 84 86
expr (72)
    on left: 88 89, on right: 16 17 76 77 88 109 110
add_op (73)
    on left: 90 91, on right: 88
term (74)
    on left: 92 93, on right: 88 89 92
mul_op (75)
    on left: 94 95, on right: 92
factor (76)
    on left: 96 97 98 99 100 101 102 103 104 105 106, on right: 92
    93
var_ref (77)
    on left: 107 108, on right: 60 104 105 106
dim_list (78)
    on left: 109 110, on right: 108 109


State 0

    0 $accept: . program $end
    1 program: . global_decl_list
    2        | . %empty  [$end]
    3 global_decl_list: . global_decl_list global_decl
    4                 | . global_decl
    5 global_decl: . decl_list function_decl
    6            | . function_decl
    7 function_decl: . type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | . VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | . type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | . VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   30 var_decl: ID . id_list MK_SEMICOLON
   33 id_list: . ID
   34        | . id_list MK_COMMA ID
   35        | . id_list MK_COMMA ID dim_decl
   36        | . ID dim_decl

    ID  shift, and go to state 15

    id_list  go to state 16


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


State 3

   31 type: INT .

    $default  reduce using rule 31 (type)


State 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


State 6

    0 $accept: program . $end

    $end  shift, and go to state 20


State 7

    1 program: global_decl_list .  [$end]
    3 global_decl_list: global_decl_list . global_decl
    5 global_decl: . decl_list function_decl
    6            | . function_decl
    7 function_decl: . type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | . VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | . type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | . VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
    7 function_decl: . type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | . VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | . type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | . VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   23 decl_list: decl_list . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


State 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


State 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON
   47 init_id_list: . init_id
   48             | . init_id_list MK_COMMA init_id
   49 init_id: . ID
   50        | . ID dim_decl
   51        | . ID OP_ASSIGN relop_expr

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


State 15

   33 id_list: ID .  [MK_COMMA, MK_SEMICOLON]
   36        | ID . dim_decl
   37 dim_decl: . dim_decl MK_LB cexpr MK_RB
   38         | . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 27

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 28


State 16

   30 var_decl: ID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 30


State 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 31


State 18

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON
   33 id_list: . ID
   34        | . id_list MK_COMMA ID
   35        | . id_list MK_COMMA ID dim_decl
   36        | . ID dim_decl

    ID  shift, and go to state 15

    id_list  go to state 32


State 19

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON
   33 id_list: . ID
   34        | . id_list MK_COMMA ID
   35        | . id_list MK_COMMA ID dim_decl
   36        | . ID dim_decl

    ID  shift, and go to state 15

    id_list  go to state 33


State 20

    0 $accept: program $end .

    $default  accept


State 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 23

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


State 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   37 dim_decl: . dim_decl MK_LB cexpr MK_RB
   38         | . MK_LB cexpr MK_RB
   49 init_id: ID .  [MK_COMMA, MK_SEMICOLON]
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27
    MK_LPAREN  shift, and go to state 35

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


State 25

   29 var_decl: type init_id_list . MK_SEMICOLON
   48 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


State 26

   47 init_id_list: init_id .

    $default  reduce using rule 47 (init_id_list)


State 27

   38 dim_decl: MK_LB . cexpr MK_RB
   39 cexpr: . cexpr OP_PLUS mcexpr
   40      | . cexpr OP_MINUS mcexpr
   41      | . mcexpr
   42 mcexpr: . mcexpr OP_TIMES cfactor
   43       | . mcexpr OP_DIVIDE cfactor
   44       | . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 41
    mcexpr   go to state 42
    cfactor  go to state 43


State 28

   36 id_list: ID dim_decl .  [MK_COMMA, MK_SEMICOLON]
   37 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 36 (id_list)


State 29

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 45


State 30

   30 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


State 31

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: . param_list MK_COMMA param
   12           | . param
   13 param: . type ID
   14      | . type ID dim_fn
   31 type: . INT
   32     | . FLOAT

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 46

    param_list  go to state 47
    param       go to state 48
    type        go to state 49


State 32

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 50


State 33

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 51


State 34

   51 init_id: ID OP_ASSIGN . relop_expr
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 57
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 35

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: . param_list MK_COMMA param
   12           | . param
   13 param: . type ID
   14      | . type ID dim_fn
   31 type: . INT
   32     | . FLOAT

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 64

    param_list  go to state 65
    param       go to state 48
    type        go to state 49


State 36

   37 dim_decl: dim_decl . MK_LB cexpr MK_RB
   50 init_id: ID dim_decl .  [MK_COMMA, MK_SEMICOLON]

    MK_LB  shift, and go to state 44

    $default  reduce using rule 50 (init_id)


State 37

   48 init_id_list: init_id_list MK_COMMA . init_id
   49 init_id: . ID
   50        | . ID dim_decl
   51        | . ID OP_ASSIGN relop_expr

    ID  shift, and go to state 66

    init_id  go to state 67


State 38

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 39

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


State 40

   39 cexpr: . cexpr OP_PLUS mcexpr
   40      | . cexpr OP_MINUS mcexpr
   41      | . mcexpr
   42 mcexpr: . mcexpr OP_TIMES cfactor
   43       | . mcexpr OP_DIVIDE cfactor
   44       | . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN
   46        | MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 68
    mcexpr   go to state 42
    cfactor  go to state 43


State 41

   38 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 69
    OP_MINUS  shift, and go to state 70
    MK_RB     shift, and go to state 71


State 42

   41 cexpr: mcexpr .  [OP_PLUS, OP_MINUS, MK_RB, MK_RPAREN]
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 41 (cexpr)


State 43

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


State 44

   37 dim_decl: dim_decl MK_LB . cexpr MK_RB
   39 cexpr: . cexpr OP_PLUS mcexpr
   40      | . cexpr OP_MINUS mcexpr
   41      | . mcexpr
   42 mcexpr: . mcexpr OP_TIMES cfactor
   43       | . mcexpr OP_DIVIDE cfactor
   44       | . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 74
    mcexpr   go to state 42
    cfactor  go to state 43


State 45

   34 id_list: id_list MK_COMMA ID .  [MK_COMMA, MK_SEMICOLON]
   35        | id_list MK_COMMA ID . dim_decl
   37 dim_decl: . dim_decl MK_LB cexpr MK_RB
   38         | . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 27

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 75


State 46

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 76


State 47

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 77
    MK_COMMA   shift, and go to state 78


State 48

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 49

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 79


State 50

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 51

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


State 52

  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 var_ref: ID .  [OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, OP_TIMES, OP_DIVIDE, MK_RB, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
  108        | ID . dim_list
  109 dim_list: . dim_list MK_LB expr MK_RB
  110         | . MK_LB expr MK_RB

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 81

    $default  reduce using rule 107 (var_ref)

    dim_list  go to state 82


State 53

   99 factor: CONST .

    $default  reduce using rule 99 (factor)


State 54

   98 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT . CONST
  103       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | OP_NOT . var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 83
    CONST      shift, and go to state 84
    MK_LPAREN  shift, and go to state 85

    var_ref  go to state 86


State 55

   97 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS . CONST
  105       | OP_MINUS . var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 87
    CONST      shift, and go to state 88
    MK_LPAREN  shift, and go to state 89

    var_ref  go to state 90


State 56

   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   96       | MK_LPAREN . relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 91
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 57

   51 init_id: ID OP_ASSIGN relop_expr .  [MK_COMMA, MK_SEMICOLON]
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 92

    $default  reduce using rule 51 (init_id)


State 58

   72 relop_expr: relop_term .  [OP_OR, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 93

    $default  reduce using rule 72 (relop_expr)


State 59

   74 relop_term: relop_factor .

    $default  reduce using rule 74 (relop_term)


State 60

   76 relop_factor: expr .  [OP_OR, OP_AND, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   77             | expr . rel_op expr
   78 rel_op: . OP_EQ
   79       | . OP_GE
   80       | . OP_LE
   81       | . OP_NE
   82       | . OP_GT
   83       | . OP_LT
   88 expr: expr . add_op term
   90 add_op: . OP_PLUS
   91       | . OP_MINUS

    OP_EQ     shift, and go to state 94
    OP_NE     shift, and go to state 95
    OP_GT     shift, and go to state 96
    OP_LT     shift, and go to state 97
    OP_GE     shift, and go to state 98
    OP_LE     shift, and go to state 99
    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101

    $default  reduce using rule 76 (relop_factor)

    rel_op  go to state 102
    add_op  go to state 103


State 61

   89 expr: term .  [OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, MK_RB, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   92 term: term . mul_op factor
   94 mul_op: . OP_TIMES
   95       | . OP_DIVIDE

    OP_TIMES   shift, and go to state 104
    OP_DIVIDE  shift, and go to state 105

    $default  reduce using rule 89 (expr)

    mul_op  go to state 106


State 62

   93 term: factor .

    $default  reduce using rule 93 (term)


State 63

  104 factor: var_ref .

    $default  reduce using rule 104 (factor)


State 64

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 107


State 65

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 108
    MK_COMMA   shift, and go to state 78


State 66

   37 dim_decl: . dim_decl MK_LB cexpr MK_RB
   38         | . MK_LB cexpr MK_RB
   49 init_id: ID .  [MK_COMMA, MK_SEMICOLON]
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


State 67

   48 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 48 (init_id_list)


State 68

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   46 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 69
    OP_MINUS   shift, and go to state 70
    MK_RPAREN  shift, and go to state 109


State 69

   39 cexpr: cexpr OP_PLUS . mcexpr
   42 mcexpr: . mcexpr OP_TIMES cfactor
   43       | . mcexpr OP_DIVIDE cfactor
   44       | . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 110
    cfactor  go to state 43


State 70

   40 cexpr: cexpr OP_MINUS . mcexpr
   42 mcexpr: . mcexpr OP_TIMES cfactor
   43       | . mcexpr OP_DIVIDE cfactor
   44       | . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 111
    cfactor  go to state 43


State 71

   38 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


State 72

   42 mcexpr: mcexpr OP_TIMES . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 112


State 73

   43 mcexpr: mcexpr OP_DIVIDE . cfactor
   45 cfactor: . CONST
   46        | . MK_LPAREN cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 113


State 74

   37 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 69
    OP_MINUS  shift, and go to state 70
    MK_RB     shift, and go to state 114


State 75

   35 id_list: id_list MK_COMMA ID dim_decl .  [MK_COMMA, MK_SEMICOLON]
   37 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 35 (id_list)


State 76

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE
   19 block: . decl_list stmt_list
   20      | . stmt_list
   21      | . decl_list
   22      | . %empty  [MK_RBRACE]
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT
   52 stmt_list: . stmt_list stmt
   53          | . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 122
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


State 77

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 128


State 78

   11 param_list: param_list MK_COMMA . param
   13 param: . type ID
   14      | . type ID dim_fn
   31 type: . INT
   32     | . FLOAT

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 129
    type   go to state 49


State 79

   13 param: type ID .  [MK_RPAREN, MK_COMMA]
   14      | type ID . dim_fn
   15 dim_fn: . MK_LB expr_null MK_RB
   16       | . dim_fn MK_LB expr MK_RB

    MK_LB  shift, and go to state 130

    $default  reduce using rule 13 (param)

    dim_fn  go to state 131


State 80

   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list
  110 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 132
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


State 81

   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_RPAREN]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  102       | ID MK_LPAREN . relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 134
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 82

  108 var_ref: ID dim_list .  [OP_ASSIGN, OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, OP_TIMES, OP_DIVIDE, MK_RB, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
  109 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 136

    $default  reduce using rule 108 (var_ref)


State 83

  103 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 var_ref: ID .  [OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, OP_TIMES, OP_DIVIDE, MK_RB, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
  108        | ID . dim_list
  109 dim_list: . dim_list MK_LB expr MK_RB
  110         | . MK_LB expr MK_RB

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 137

    $default  reduce using rule 107 (var_ref)

    dim_list  go to state 82


State 84

  101 factor: OP_NOT CONST .

    $default  reduce using rule 101 (factor)


State 85

   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   98       | OP_NOT MK_LPAREN . relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 138
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 86

  106 factor: OP_NOT var_ref .

    $default  reduce using rule 106 (factor)


State 87

  107 var_ref: ID .  [OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, OP_TIMES, OP_DIVIDE, MK_RB, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
  108        | ID . dim_list
  109 dim_list: . dim_list MK_LB expr MK_RB
  110         | . MK_LB expr MK_RB

    MK_LB  shift, and go to state 80

    $default  reduce using rule 107 (var_ref)

    dim_list  go to state 82


State 88

  100 factor: OP_MINUS CONST .

    $default  reduce using rule 100 (factor)


State 89

   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   97       | OP_MINUS MK_LPAREN . relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 139
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 90

  105 factor: OP_MINUS var_ref .

    $default  reduce using rule 105 (factor)


State 91

   73 relop_expr: relop_expr . OP_OR relop_term
   96 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 92
    MK_RPAREN  shift, and go to state 140


State 92

   73 relop_expr: relop_expr OP_OR . relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_term    go to state 141
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 93

   75 relop_term: relop_term OP_AND . relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_factor  go to state 142
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 94

   78 rel_op: OP_EQ .

    $default  reduce using rule 78 (rel_op)


State 95

   81 rel_op: OP_NE .

    $default  reduce using rule 81 (rel_op)


State 96

   82 rel_op: OP_GT .

    $default  reduce using rule 82 (rel_op)


State 97

   83 rel_op: OP_LT .

    $default  reduce using rule 83 (rel_op)


State 98

   79 rel_op: OP_GE .

    $default  reduce using rule 79 (rel_op)


State 99

   80 rel_op: OP_LE .

    $default  reduce using rule 80 (rel_op)


State 100

   90 add_op: OP_PLUS .

    $default  reduce using rule 90 (add_op)


State 101

   91 add_op: OP_MINUS .

    $default  reduce using rule 91 (add_op)


State 102

   77 relop_factor: expr rel_op . expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 143
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


State 103

   88 expr: expr add_op . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    term     go to state 144
    factor   go to state 62
    var_ref  go to state 63


State 104

   94 mul_op: OP_TIMES .

    $default  reduce using rule 94 (mul_op)


State 105

   95 mul_op: OP_DIVIDE .

    $default  reduce using rule 95 (mul_op)


State 106

   92 term: term mul_op . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    factor   go to state 145
    var_ref  go to state 63


State 107

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE
   19 block: . decl_list stmt_list
   20      | . stmt_list
   21      | . decl_list
   22      | . %empty  [MK_RBRACE]
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT
   52 stmt_list: . stmt_list stmt
   53          | . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 146
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


State 108

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 147


State 109

   46 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 46 (cfactor)


State 110

   39 cexpr: cexpr OP_PLUS mcexpr .  [OP_PLUS, OP_MINUS, MK_RB, MK_RPAREN]
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 39 (cexpr)


State 111

   40 cexpr: cexpr OP_MINUS mcexpr .  [OP_PLUS, OP_MINUS, MK_RB, MK_RPAREN]
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 72
    OP_DIVIDE  shift, and go to state 73

    $default  reduce using rule 40 (cexpr)


State 112

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


State 113

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


State 114

   37 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


State 115

   30 var_decl: ID . id_list MK_SEMICOLON
   33 id_list: . ID
   34        | . id_list MK_COMMA ID
   35        | . id_list MK_COMMA ID dim_decl
   36        | . ID dim_decl
   62 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 var_ref: ID .  [OP_ASSIGN]
  108        | ID . dim_list
  109 dim_list: . dim_list MK_LB expr MK_RB
  110         | . MK_LB expr MK_RB

    ID         shift, and go to state 15
    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 148

    $default  reduce using rule 107 (var_ref)

    id_list   go to state 16
    dim_list  go to state 82


State 116

   61 stmt: IF . MK_LPAREN relop_expr_list MK_RPAREN stmt elseif

    MK_LPAREN  shift, and go to state 149


State 117

   58 stmt: WHILE . MK_LPAREN relop_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 150


State 118

   59 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 151


State 119

   19 block: . decl_list stmt_list
   20      | . stmt_list
   21      | . decl_list
   22      | . %empty  [MK_RBRACE]
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT
   52 stmt_list: . stmt_list stmt
   53          | . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   57     | MK_LBRACE . block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 152
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


State 120

   63 stmt: MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


State 121

   64 stmt: RETURN . MK_SEMICOLON
   65     | RETURN . relop_expr MK_SEMICOLON
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 52
    CONST         shift, and go to state 53
    OP_NOT        shift, and go to state 54
    OP_MINUS      shift, and go to state 55
    MK_LPAREN     shift, and go to state 56
    MK_SEMICOLON  shift, and go to state 153

    relop_expr    go to state 154
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 122

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 155


State 123

   19 block: decl_list . stmt_list
   21      | decl_list .  [MK_RBRACE]
   23 decl_list: decl_list . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT
   52 stmt_list: . stmt_list stmt
   53          | . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 21 (block)

    decl       go to state 23
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 156
    stmt       go to state 126
    var_ref    go to state 127


State 124

   29 var_decl: type . init_id_list MK_SEMICOLON
   47 init_id_list: . init_id
   48             | . init_id_list MK_COMMA init_id
   49 init_id: . ID
   50        | . ID dim_decl
   51        | . ID OP_ASSIGN relop_expr

    ID  shift, and go to state 66

    init_id_list  go to state 25
    init_id       go to state 26


State 125

   20 block: stmt_list .  [MK_RBRACE]
   52 stmt_list: stmt_list . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 20 (block)

    stmt     go to state 158
    var_ref  go to state 127


State 126

   53 stmt_list: stmt .

    $default  reduce using rule 53 (stmt_list)


State 127

   60 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 159


State 128

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE
   19 block: . decl_list stmt_list
   20      | . stmt_list
   21      | . decl_list
   22      | . %empty  [MK_RBRACE]
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT
   52 stmt_list: . stmt_list stmt
   53          | . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 160
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


State 129

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


State 130

   15 dim_fn: MK_LB . expr_null MK_RB
   17 expr_null: . expr
   18          | . %empty  [MK_RB]
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 161
    expr       go to state 162
    term       go to state 61
    factor     go to state 62
    var_ref    go to state 63


State 131

   14 param: type ID dim_fn .  [MK_RPAREN, MK_COMMA]
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 163

    $default  reduce using rule 14 (param)


State 132

   88 expr: expr . add_op term
   90 add_op: . OP_PLUS
   91       | . OP_MINUS
  110 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 164

    add_op  go to state 103


State 133

   73 relop_expr: relop_expr . OP_OR relop_term
   87 nonempty_relop_expr_list: relop_expr .  [MK_RPAREN, MK_COMMA, MK_SEMICOLON]

    OP_OR  shift, and go to state 92

    $default  reduce using rule 87 (nonempty_relop_expr_list)


State 134

  102 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 165


State 135

   84 relop_expr_list: nonempty_relop_expr_list .  [MK_RPAREN, MK_SEMICOLON]
   86 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 166

    $default  reduce using rule 84 (relop_expr_list)


State 136

   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list
  109 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 167
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


State 137

   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_RPAREN]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 168
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 138

   73 relop_expr: relop_expr . OP_OR relop_term
   98 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 92
    MK_RPAREN  shift, and go to state 169


State 139

   73 relop_expr: relop_expr . OP_OR relop_term
   97 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 92
    MK_RPAREN  shift, and go to state 170


State 140

   96 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


State 141

   73 relop_expr: relop_expr OP_OR relop_term .  [OP_OR, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   75 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 93

    $default  reduce using rule 73 (relop_expr)


State 142

   75 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 75 (relop_term)


State 143

   77 relop_factor: expr rel_op expr .  [OP_OR, OP_AND, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   88 expr: expr . add_op term
   90 add_op: . OP_PLUS
   91       | . OP_MINUS

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101

    $default  reduce using rule 77 (relop_factor)

    add_op  go to state 103


State 144

   88 expr: expr add_op term .  [OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, MK_RB, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   92 term: term . mul_op factor
   94 mul_op: . OP_TIMES
   95       | . OP_DIVIDE

    OP_TIMES   shift, and go to state 104
    OP_DIVIDE  shift, and go to state 105

    $default  reduce using rule 88 (expr)

    mul_op  go to state 106


State 145

   92 term: term mul_op factor .

    $default  reduce using rule 92 (term)


State 146

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 171


State 147

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE
   19 block: . decl_list stmt_list
   20      | . stmt_list
   21      | . decl_list
   22      | . %empty  [MK_RBRACE]
   23 decl_list: . decl_list decl
   24          | . decl
   25 decl: . type_decl
   26     | . var_decl
   27 type_decl: . TYPEDEF type id_list MK_SEMICOLON
   28          | . TYPEDEF VOID id_list MK_SEMICOLON
   29 var_decl: . type init_id_list MK_SEMICOLON
   30         | . ID id_list MK_SEMICOLON
   31 type: . INT
   32     | . FLOAT
   52 stmt_list: . stmt_list stmt
   53          | . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 115
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 22 (block)

    block      go to state 172
    decl_list  go to state 123
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 124
    stmt_list  go to state 125
    stmt       go to state 126
    var_ref    go to state 127


State 148

   62 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_RPAREN]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 173
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 149

   61 stmt: IF MK_LPAREN . relop_expr_list MK_RPAREN stmt elseif
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_RPAREN]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 174
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 150

   58 stmt: WHILE MK_LPAREN . relop_expr_list MK_RPAREN stmt
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_RPAREN]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 175
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 151

   59 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   66 assign_expr_list: . nonempty_assign_expr_list
   67                 | . %empty  [MK_SEMICOLON]
   68 nonempty_assign_expr_list: . nonempty_assign_expr_list MK_COMMA assign_expr
   69                          | . assign_expr
   70 assign_expr: . ID OP_ASSIGN relop_expr
   71            | . relop_expr
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 176
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 67 (assign_expr_list)

    assign_expr_list           go to state 177
    nonempty_assign_expr_list  go to state 178
    assign_expr                go to state 179
    relop_expr                 go to state 180
    relop_term                 go to state 58
    relop_factor               go to state 59
    expr                       go to state 60
    term                       go to state 61
    factor                     go to state 62
    var_ref                    go to state 63


State 152

   57 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 181


State 153

   64 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 64 (stmt)


State 154

   65 stmt: RETURN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 92
    MK_SEMICOLON  shift, and go to state 182


State 155

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 156

   19 block: decl_list stmt_list .  [MK_RBRACE]
   52 stmt_list: stmt_list . stmt
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    $default  reduce using rule 19 (block)

    stmt     go to state 158
    var_ref  go to state 127


State 157

   62 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 var_ref: ID .  [OP_ASSIGN]
  108        | ID . dim_list
  109 dim_list: . dim_list MK_LB expr MK_RB
  110         | . MK_LB expr MK_RB

    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 148

    $default  reduce using rule 107 (var_ref)

    dim_list  go to state 82


State 158

   52 stmt_list: stmt_list stmt .

    $default  reduce using rule 52 (stmt_list)


State 159

   60 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 183
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 160

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 184


State 161

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 185


State 162

   17 expr_null: expr .  [MK_RB]
   88 expr: expr . add_op term
   90 add_op: . OP_PLUS
   91       | . OP_MINUS

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 103


State 163

   16 dim_fn: dim_fn MK_LB . expr MK_RB
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    expr     go to state 186
    term     go to state 61
    factor   go to state 62
    var_ref  go to state 63


State 164

  110 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 110 (dim_list)


State 165

  102 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


State 166

   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 187
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 167

   88 expr: expr . add_op term
   90 add_op: . OP_PLUS
   91       | . OP_MINUS
  109 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 188

    add_op  go to state 103


State 168

  103 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 189


State 169

   98 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 98 (factor)


State 170

   97 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


State 171

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 172

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 190


State 173

   62 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 191


State 174

   61 stmt: IF MK_LPAREN relop_expr_list . MK_RPAREN stmt elseif

    MK_RPAREN  shift, and go to state 192


State 175

   58 stmt: WHILE MK_LPAREN relop_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 193


State 176

   70 assign_expr: ID . OP_ASSIGN relop_expr
  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  107 var_ref: ID .  [OP_OR, OP_AND, OP_EQ, OP_NE, OP_GT, OP_LT, OP_GE, OP_LE, OP_PLUS, OP_MINUS, OP_TIMES, OP_DIVIDE, MK_RPAREN, MK_COMMA, MK_SEMICOLON]
  108        | ID . dim_list
  109 dim_list: . dim_list MK_LB expr MK_RB
  110         | . MK_LB expr MK_RB

    OP_ASSIGN  shift, and go to state 194
    MK_LB      shift, and go to state 80
    MK_LPAREN  shift, and go to state 81

    $default  reduce using rule 107 (var_ref)

    dim_list  go to state 82


State 177

   59 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 195


State 178

   66 assign_expr_list: nonempty_assign_expr_list .  [MK_RPAREN, MK_SEMICOLON]
   68 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 196

    $default  reduce using rule 66 (assign_expr_list)


State 179

   69 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 69 (nonempty_assign_expr_list)


State 180

   71 assign_expr: relop_expr .  [MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 92

    $default  reduce using rule 71 (assign_expr)


State 181

   57 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 57 (stmt)


State 182

   65 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 65 (stmt)


State 183

   60 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 92
    MK_SEMICOLON  shift, and go to state 197


State 184

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 185

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


State 186

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   88 expr: expr . add_op term
   90 add_op: . OP_PLUS
   91       | . OP_MINUS

    OP_PLUS   shift, and go to state 100
    OP_MINUS  shift, and go to state 101
    MK_RB     shift, and go to state 198

    add_op  go to state 103


State 187

   73 relop_expr: relop_expr . OP_OR relop_term
   86 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .  [MK_RPAREN, MK_COMMA, MK_SEMICOLON]

    OP_OR  shift, and go to state 92

    $default  reduce using rule 86 (nonempty_relop_expr_list)


State 188

  109 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 109 (dim_list)


State 189

  103 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 103 (factor)


State 190

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 191

   62 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 62 (stmt)


State 192

   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   61     | IF MK_LPAREN relop_expr_list MK_RPAREN . stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 199
    var_ref  go to state 127


State 193

   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   58     | WHILE MK_LPAREN relop_expr_list MK_RPAREN . stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 200
    var_ref  go to state 127


State 194

   70 assign_expr: ID OP_ASSIGN . relop_expr
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    relop_expr    go to state 201
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 195

   59 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_SEMICOLON]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 202
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 196

   68 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr
   70 assign_expr: . ID OP_ASSIGN relop_expr
   71            | . relop_expr
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 176
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    assign_expr   go to state 203
    relop_expr    go to state 180
    relop_term    go to state 58
    relop_factor  go to state 59
    expr          go to state 60
    term          go to state 61
    factor        go to state 62
    var_ref       go to state 63


State 197

   60 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 60 (stmt)


State 198

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 199

   54 elseif: . ELSE stmt
   55       | . ELSE IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   56       | . %empty  [ID, IF, ELSE, WHILE, FOR, MK_LBRACE, MK_RBRACE, MK_SEMICOLON, RETURN]
   61 stmt: IF MK_LPAREN relop_expr_list MK_RPAREN stmt . elseif

    ELSE  shift, and go to state 204

    ELSE      [reduce using rule 56 (elseif)]
    $default  reduce using rule 56 (elseif)

    elseif  go to state 205


State 200

   58 stmt: WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt .

    $default  reduce using rule 58 (stmt)


State 201

   70 assign_expr: ID OP_ASSIGN relop_expr .  [MK_RPAREN, MK_COMMA, MK_SEMICOLON]
   73 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 92

    $default  reduce using rule 70 (assign_expr)


State 202

   59 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 206


State 203

   68 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 68 (nonempty_assign_expr_list)


State 204

   54 elseif: ELSE . stmt
   55       | ELSE . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 207
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 208
    var_ref  go to state 127


State 205

   61 stmt: IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif .

    $default  reduce using rule 61 (stmt)


State 206

   59 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt
   66 assign_expr_list: . nonempty_assign_expr_list
   67                 | . %empty  [MK_RPAREN]
   68 nonempty_assign_expr_list: . nonempty_assign_expr_list MK_COMMA assign_expr
   69                          | . assign_expr
   70 assign_expr: . ID OP_ASSIGN relop_expr
   71            | . relop_expr
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 176
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 67 (assign_expr_list)

    assign_expr_list           go to state 209
    nonempty_assign_expr_list  go to state 178
    assign_expr                go to state 179
    relop_expr                 go to state 180
    relop_term                 go to state 58
    relop_factor               go to state 59
    expr                       go to state 60
    term                       go to state 61
    factor                     go to state 62
    var_ref                    go to state 63


State 207

   55 elseif: ELSE IF . MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   61 stmt: IF . MK_LPAREN relop_expr_list MK_RPAREN stmt elseif

    MK_LPAREN  shift, and go to state 210


State 208

   54 elseif: ELSE stmt .

    $default  reduce using rule 54 (elseif)


State 209

   59 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 211


State 210

   55 elseif: ELSE IF MK_LPAREN . relop_expr_list MK_RPAREN stmt elseif
   61 stmt: IF MK_LPAREN . relop_expr_list MK_RPAREN stmt elseif
   72 relop_expr: . relop_term
   73           | . relop_expr OP_OR relop_term
   74 relop_term: . relop_factor
   75           | . relop_term OP_AND relop_factor
   76 relop_factor: . expr
   77             | . expr rel_op expr
   84 relop_expr_list: . nonempty_relop_expr_list
   85                | . %empty  [MK_RPAREN]
   86 nonempty_relop_expr_list: . nonempty_relop_expr_list MK_COMMA relop_expr
   87                         | . relop_expr
   88 expr: . expr add_op term
   89     | . term
   92 term: . term mul_op factor
   93     | . factor
   96 factor: . MK_LPAREN relop_expr MK_RPAREN
   97       | . OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   98       | . OP_NOT MK_LPAREN relop_expr MK_RPAREN
   99       | . CONST
  100       | . OP_MINUS CONST
  101       | . OP_NOT CONST
  102       | . ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | . OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | . var_ref
  105       | . OP_MINUS var_ref
  106       | . OP_NOT var_ref
  107 var_ref: . ID
  108        | . ID dim_list

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_MINUS   shift, and go to state 55
    MK_LPAREN  shift, and go to state 56

    $default  reduce using rule 85 (relop_expr_list)

    relop_expr                go to state 133
    relop_term                go to state 58
    relop_factor              go to state 59
    relop_expr_list           go to state 212
    nonempty_relop_expr_list  go to state 135
    expr                      go to state 60
    term                      go to state 61
    factor                    go to state 62
    var_ref                   go to state 63


State 211

   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   59     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 213
    var_ref  go to state 127


State 212

   55 elseif: ELSE IF MK_LPAREN relop_expr_list . MK_RPAREN stmt elseif
   61 stmt: IF MK_LPAREN relop_expr_list . MK_RPAREN stmt elseif

    MK_RPAREN  shift, and go to state 214


State 213

   59 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 59 (stmt)


State 214

   55 elseif: ELSE IF MK_LPAREN relop_expr_list MK_RPAREN . stmt elseif
   57 stmt: . MK_LBRACE block MK_RBRACE
   58     | . WHILE MK_LPAREN relop_expr_list MK_RPAREN stmt
   59     | . FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   60     | . var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   61     | . IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   61     | IF MK_LPAREN relop_expr_list MK_RPAREN . stmt elseif
   62     | . ID MK_LPAREN relop_expr_list MK_RPAREN
   63     | . MK_SEMICOLON
   64     | . RETURN MK_SEMICOLON
   65     | . RETURN relop_expr MK_SEMICOLON
  107 var_ref: . ID
  108        | . ID dim_list

    ID            shift, and go to state 157
    IF            shift, and go to state 116
    WHILE         shift, and go to state 117
    FOR           shift, and go to state 118
    MK_LBRACE     shift, and go to state 119
    MK_SEMICOLON  shift, and go to state 120
    RETURN        shift, and go to state 121

    stmt     go to state 215
    var_ref  go to state 127


State 215

   54 elseif: . ELSE stmt
   55       | . ELSE IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif
   55       | ELSE IF MK_LPAREN relop_expr_list MK_RPAREN stmt . elseif
   56       | . %empty  [ID, IF, ELSE, WHILE, FOR, MK_LBRACE, MK_RBRACE, MK_SEMICOLON, RETURN]
   61 stmt: IF MK_LPAREN relop_expr_list MK_RPAREN stmt . elseif

    ELSE  shift, and go to state 204

    ELSE      [reduce using rule 56 (elseif)]
    $default  reduce using rule 56 (elseif)

    elseif  go to state 216


State 216

   55 elseif: ELSE IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif .  [ID, IF, ELSE, WHILE, FOR, MK_LBRACE, MK_RBRACE, MK_SEMICOLON, RETURN]
   61 stmt: IF MK_LPAREN relop_expr_list MK_RPAREN stmt elseif .  [ID, IF, ELSE, WHILE, FOR, MK_LBRACE, MK_RBRACE, MK_SEMICOLON, RETURN]

    ID            reduce using rule 55 (elseif)
    ID            [reduce using rule 61 (stmt)]
    IF            reduce using rule 55 (elseif)
    IF            [reduce using rule 61 (stmt)]
    ELSE          reduce using rule 55 (elseif)
    ELSE          [reduce using rule 61 (stmt)]
    WHILE         reduce using rule 55 (elseif)
    WHILE         [reduce using rule 61 (stmt)]
    FOR           reduce using rule 55 (elseif)
    FOR           [reduce using rule 61 (stmt)]
    MK_LBRACE     reduce using rule 55 (elseif)
    MK_LBRACE     [reduce using rule 61 (stmt)]
    MK_RBRACE     reduce using rule 55 (elseif)
    MK_RBRACE     [reduce using rule 61 (stmt)]
    MK_SEMICOLON  reduce using rule 55 (elseif)
    MK_SEMICOLON  [reduce using rule 61 (stmt)]
    RETURN        reduce using rule 55 (elseif)
    RETURN        [reduce using rule 61 (stmt)]
    $default      reduce using rule 55 (elseif)
